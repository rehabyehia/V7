[build-system]
requires = ["hatchling>=1.11", "jupyterlab>=4.0.0a31,<5"]
build-backend = "hatchling.build"

[project]
name = "notebook"
description = "Jupyter Notebook - A web-based notebook environment for interactive computing"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.7"
authors = [
    { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
keywords = [
    "Jupyter",
    "JupyterLab",
    "Notebook",
]
classifiers = [
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "jupyter_server>=2.0.0rc3,<3",
    "jupyterlab>=4.0.0a31,<5",
    "jupyterlab_server>=2.16.3,<3",
    "notebook_shim>=0.2,<0.3",
    "tornado>=6.1.0",
]
dynamic = ["version"]

[project.scripts]
jupyter-notebook = "notebook.app:main"

[project.urls]
Documentation = "https://jupyter-notebook.readthedocs.io/"
Homepage = "https://github.com/jupyter/notebook"
Source = "https://github.com/jupyter/notebook"
Tracker = "https://github.com/jupyter/notebook/issues"

[project.optional-dependencies]
test = [
    "coverage",
    "nbval",
    "pytest>=6.0",
    "pytest-cov",
    "requests",
    "pytest-tornasync",
    "pytest-timeout",
    "pytest-console-scripts",
    "ipykernel",
    "jupyter_server[test]>=2.0.0rc3,<3",
    "jupyterlab_server[test]>=2.16.3,<3",
]
dev = [
    "pre-commit",
    "hatch"
]

[tool.hatch.version]
path = "notebook/_version.py"
validate-bump = false

[tool.hatch.build.targets.wheel.shared-data]
"notebook/labextension" = "share/jupyter/labextensions/@jupyter-notebook/lab-extension"
"notebook/schemas/@jupyter-notebook" = "share/jupyter/lab/schemas/@jupyter-notebook"
"jupyter-config/jupyter_server_config.d" = "etc/jupyter/jupyter_server_config.d"

[tool.hatch.build.targets.sdist]
artifacts = [
    "notebook/labextension",
    "notebook/static",
    "notebook/schemas/@jupyter-notebook",
    "notebook/templates",
]
include = [
    "/jupyter-config",
    "/notebook",
    "/tests",
    "/package.json",
    "/install.json",
    "/ts*.json",
    "/*.md"
]

[tool.hatch.build.targets.wheel]
artifacts = [
    "notebook/static",
    "notebook/templates",
]
include = ["/notebook"]


[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.2"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "notebook/labextension/static/style.js",
    "notebook/static/bundle.js"
]
install-pre-commit-hook = true

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
editable_build_cmd = "build"
source_dir = "packages"
build_dir = "notebook/static"
npm = "jlpm"

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/",
]
timeout = 300
filterwarnings = [
    "error",
    "ignore:There is no current event loop:DeprecationWarning",
    "ignore:make_current is deprecated; start the event loop first",
    "ignore:clear_current is deprecated"
]

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]

[tool.jupyter-releaser.options]
version-cmd = "jlpm run release:bump --force --skip-commit"

[tool.jupyter-releaser.hooks]
before-bump-version = [
    "python -m pip install --pre -U jupyterlab",
    "jlpm",
    "jlpm run build:utils",
    "python -m pip install hatch"
]
before-build-npm = [
    "jlpm build:prod"
]
before-build-python = [
    "jlpm clean"
]
